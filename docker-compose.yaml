version: '3.7'
services:
  frontend:
    build: ./frontend
    ports:
      - 3000:3000
    restart: always
    container_name: pa_frontend
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
  backend:
    build: ./backend
    ports:
      - 3001:3001
    environment:
      - DB_USER=root
      - DB_PASSWORD=password
      - DB_HOST=db
      - DB_NAME=PADB
      - JWT_SECRET=secret123 #Caso eu venha a utilizar um sistema de autenticação de usuário.
    working_dir: /app
    volumes:
      - ./backend/:/app/
    container_name: pa_backend
    restart: always
    depends_on:
      db:
        condition: service_healthy

  db:
    image: mysql:8.0.32
    container_name: pa_db
    restart: always
    environment:
      # Aqui eu defino as variaveis de ambiente para o banco
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: PADB
    ports:
      - 3306:3306
      - 33060:33060
    healthcheck:
      # Aqui eu aguardo e verifico se o banco subiu corretamente
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 10s
      retries: 5
    volumes:
     # Para testes sem o sequelize eu poderei simplesmente adicionar SQL por meio da pasta definida
      - ./sql:/docker-entrypoint-initdb.d